#!/bin/bash

# the script requires these environment variables set in advance
DATABASE="drugcentral_lincs"
DBNAME="drugcentral.postgres.10.11"
DOCKER_IMAGE="postgres:10.11"
DATALOAD_SCRIPT="drugcentral_lincs.pgdump"
STORAGE="local"
DBEXT="postgres"
source utilityfunctions

# OVERRIDE settings from utilityfunctions
DATASET_DIR="/home/plastic/d/downloads/drugcentral_lincs.postgres2"
DATABASE_DIR="/data2/db/${DATABASE}/"

#./reset_db ${DATABASE}
#rm -r ${DATABASE_DIR}
#mkdir -p ${DATABASE_DIR}

# download postgres server docker image
# not strictly necessary but ensures local image is up to date
# you can pull "latest" but that runs the risk of breaking something later
#
docker pull ${DOCKER_IMAGE} 
 

# ERROR on mysql: sed: couldnt open temporary file /etc/sedJtO2HY: Permission denied
#
# run --rm
#
#  --health-cmd="pg_isready -U postgres -d ${DATABASE} || exit 1" \
#
#  --volume ${PROVENANCE_DIR}:/provenance 
#  --volume ${COMMON_DIR}:/common 
#
docker run --name ${DATABASE} \
  --detach \
  --restart unless-stopped \
  --user $(id -u):$(id -g) \
  --volume $DATASET_DIR:/dataset \
  --mount type=bind,src=${DATABASE_DIR},dst=/var/lib/postgresql/data \
  --env POSTGRES_PASSWORD=trontron \
  --env POSTGRES_USER=postgres \
  --env POSTGRES_DB=${DATABASE} \
  --publish 5434:5432/tcp \
  --health-cmd="( (pg_isready -U postgres -d ${DATABASE}) && (echo 'SELECT 1;' | psql -U postgres -d ${DATABASE}) ) || exit 1" \
  --health-timeout=3s \
  --health-retries=60 \
  --health-interval=6s \
  ${DOCKER_IMAGE} 

./wait4healthy ${DATABASE}

# the dump script specifies tables go into the public schema
# I don't see an easy way to override this, atm
./show_databases_postgres ${DATABASE} public 

#SECONDS=0

# increase max_wal_size (default 1GB) 
docker exec -it ${DATABASE} bash -c "echo \"alter system set max_wal_size='10GB'; \" | psql --username=postgres -d ${DATABASE}"

# restart db in order for new system setting to go into effect
docker restart ${DATABASE}
./wait4healthy ${DATABASE}

# bulk load new database
echo "Bulk load database" 
docker exec -it ${DATABASE} bash -c "pg_restore --verbose --no-privileges --jobs=4 --username=postgres --dbname=${DATABASE} --no-owner /dataset/${DATALOAD_SCRIPT}"

#echo "$SECONDS ${DATABASE} load elapsed time: $(prettyprinttime $SECONDS)" > ${PROVENANCE_DIR}loadtime-${DBNAME}.txt
#cat ${PROVENANCE_DIR}loadtime-${DBNAME}.txt

#echo "query and then list table content summary"
#./listtables_postgres ${DATABASE} ${DBNAME}
#./show_databases_postgres ${DATABASE} public 

